name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 14.x
      uses: actions/setup-node@v1
      with:
        node-version: 14.x

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - name: Attempt to restore yarn cache
      uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - run: yarn install --frozen-lockfile

    - name: Get TypeScript version
      id: typescript-version
      run: echo "::set-output name=version::$(tsc --version)"

    - name: Get TypeScript cache keys
      id: typescript-cache-keys
      env:
        TYPESCRIPT_CONFIGS_KEY: ${{ runner.os }}-typescript-${{ steps.typescript-version.outputs.version }}-${{ hashFiles('**/*tsconfig.json') }}
        TYPESCRIPT_SOURCES_KEY: ${{ hashFiles('**/*.ts', '!**/dist', '!**/node_modules') }}
      run: |
        echo "::set-output name=configs::$TYPESCRIPT_CONFIGS_KEY"
        echo "::set-output name=sources::$TYPESCRIPT_SOURCES_KEY"

    - name: Attempt to restore TypeScript cache
      uses: actions/cache@v2
      id: typescript-cache # use this to check for `cache-hit` (`steps.typescript-cache.outputs.cache-hit != 'true'`)
      with:
        path: |
          **/*.tsbuildinfo
          **/dist/**/*.d.ts
        key: ${{ steps.typescript-cache-keys.outputs.configs }}-${{ steps.typescript-cache-keys.outputs.sources }}
        restore-keys: |
           ${{ steps.typescript-cache-keys.outputs.configs }}-

    - run: yarn run ts

    - run: yarn test --verbose
